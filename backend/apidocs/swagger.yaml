basePath: /
definitions:
  handlers.updateGameRequest:
    properties:
      day:
        type: integer
    type: object
  models.Game:
    properties:
      created_at:
        type: string
      day:
        type: integer
      id:
        type: string
    type: object
  response.CreateGameData:
    properties:
      id:
        example: 7d7881cf-8d9f-457f-ac93-aa498ea8c0af
        type: string
    type: object
  response.CreateGameResponse:
    properties:
      data:
        $ref: '#/definitions/response.CreateGameData'
      success:
        type: boolean
    type: object
  response.ErrorResponse:
    properties:
      error:
        example: contextual error message
        type: string
      success:
        example: false
        type: boolean
    type: object
  response.GameResponse:
    properties:
      data:
        $ref: '#/definitions/models.Game'
      success:
        example: true
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: you@example.com
    name: Peter Kerschbaumer
  description: A simple Kanban simulation API.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Kanban-Sim API
  version: "1.0"
paths:
  /games:
    get:
      description: Returns a list of all games in the system.
      produces:
      - application/json
      responses:
        "200":
          description: List of games
          schema:
            items:
              $ref: '#/definitions/models.Game'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: List all games
      tags:
      - games
    post:
      description: Creates a new game using the embedded default board; no request
        body required
      produces:
      - application/json
      responses:
        "201":
          description: New game created
          schema:
            $ref: '#/definitions/response.CreateGameResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create a new game
      tags:
      - games
  /games/{id}:
    delete:
      description: Removes the game record identified by the given UUID.
      parameters:
      - description: Game ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid or missing game ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Game not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete game by ID
      tags:
      - games
    get:
      description: Returns the full game record for the given UUID.
      parameters:
      - description: Game ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Game retrieved successfully
          schema:
            $ref: '#/definitions/response.GameResponse'
        "400":
          description: Invalid or missing game ID
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Game not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get game by ID
      tags:
      - games
    patch:
      consumes:
      - application/json
      description: Updates the specified gameâ€™s current day by its UUID.
      parameters:
      - description: Game ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: New game day
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.updateGameRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid game ID or JSON payload
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Game not found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "405":
          description: Method not allowed
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update game day
      tags:
      - games
swagger: "2.0"
