{
    "swagger": "2.0",
    "info": {
        "description": "A simple Kanban simulation API.",
        "title": "Kanban-Sim API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "Peter Kerschbaumer",
            "email": "you@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/games": {
            "post": {
                "description": "Creates a new game using the embedded default board; no request body required",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Create a new game",
                "responses": {
                    "201": {
                        "description": "New game created",
                        "schema": {
                            "$ref": "#/definitions/response.CreateGameResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/games/{id}": {
            "get": {
                "description": "Returns the full game record for the given UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get game by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/response.GameResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid or missing game ID",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Game": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "day": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "response.CreateGameData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "7d7881cf-8d9f-457f-ac93-aa498ea8c0af"
                }
            }
        },
        "response.CreateGameResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CreateGameData"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "contextual error message"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.GameResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/models.Game"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}